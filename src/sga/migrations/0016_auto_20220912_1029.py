# Generated by Django 3.2 on 2022-09-12 16:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import laboratory.catalog


class Migration(migrations.Migration):

    dependencies = [
        ('laboratory', '0045_alter_sustancecharacteristics_bioaccumulable'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sga', '0015_merge_0011_auto_20220901_0957_0014_auto_20220905_1326'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='substance',
            name='components',
        ),
        migrations.AddField(
            model_name='builderinformation',
            name='community_share',
            field=models.BooleanField(blank=True, default=False, verbose_name='Share with community'),
        ),
        migrations.AddField(
            model_name='builderinformation',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='substance',
            name='components_sga',
            field=models.ManyToManyField(related_name='_sga_substance_components_sga_+', to='sga.Substance', verbose_name='Components'),
        ),
        migrations.AddField(
            model_name='substance',
            name='creator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='Creator'),
        ),
        migrations.AlterField(
            model_name='personaltemplatesga',
            name='preview',
            field=models.TextField(help_text='B64 preview image', null=True),
        ),
        migrations.CreateModel(
            name='SustanceCharacteristics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bioaccumulable', models.BooleanField(null=True)),
                ('molecular_formula', models.CharField(blank=True, max_length=255, null=True, verbose_name='Molecular formula')),
                ('cas_id_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Cas ID Number')),
                ('security_sheet', models.FileField(blank=True, null=True, upload_to='security_sheets/', verbose_name='Security sheet')),
                ('is_precursor', models.BooleanField(default=False, verbose_name='Is precursor')),
                ('valid_molecular_formula', models.BooleanField(default=False)),
                ('seveso_list', models.BooleanField(default=False, verbose_name='Is Seveso list III?')),
                ('h_code', models.ManyToManyField(blank=True, related_name='sga_h_code', to='sga.DangerIndication', verbose_name='Danger Indication')),
                ('iarc', laboratory.catalog.GTForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='gt_iarcrel_sga', to='laboratory.catalog')),
                ('imdg', laboratory.catalog.GTForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='gt_imdg_sga', to='laboratory.catalog')),
                ('nfpa', laboratory.catalog.GTManyToManyField(blank=True, related_name='gt_nfpa_sga', to='laboratory.Catalog', verbose_name='NFPA codes')),
                ('precursor_type', laboratory.catalog.GTForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gt_precursor_sga', to='laboratory.catalog')),
                ('storage_class', laboratory.catalog.GTManyToManyField(blank=True, related_name='gt_storage_class_sga', to='laboratory.Catalog', verbose_name='Storage class')),
                ('substance', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sga.substance')),
                ('ue_code', laboratory.catalog.GTManyToManyField(blank=True, related_name='gt_ue_sga', to='laboratory.Catalog', verbose_name='UE codes')),
                ('white_organ', laboratory.catalog.GTManyToManyField(blank=True, related_name='gt_white_organ_sga', to='laboratory.Catalog')),
            ],
            options={
                'verbose_name': 'Sustance characteristic SGA',
                'verbose_name_plural': 'Sustance characteristics SGA',
            },
        ),
    ]
