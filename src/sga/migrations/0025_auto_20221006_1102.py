# Generated by Django 3.2 on 2022-10-06 17:02

from django.db import migrations, models
import django.db.models.deletion
def create_default_template(apps, schema_editor):
    TemplateSGA = apps.get_model('sga', 'TemplateSGA')
    PersonalTemplateSGA = apps.get_model('sga', 'PersonalTemplateSGA')
    RecipientSize = apps.get_model('sga', 'RecipientSize')

    PersonalTemplateSGA.objects.all().delete()
    TemplateSGA.objects.all().delete()

    recipient = RecipientSize.objects.create(
        width=17,
        height=13
    )

    TemplateSGA.objects.create(
        name="Plantilla Base",
        community_share=True,
        recipient_size=recipient,
        is_default=True
    )


class Migration(migrations.Migration):

    dependencies = [
        ('sga', '0024_rename_substancedangerprudence_sgacomplement'),
    ]

    operations = [
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name')),
                ('country', models.CharField(blank=True, max_length=30, null=True, verbose_name='Country')),
                ('direction', models.TextField(blank=True, null=True, verbose_name='Direction')),
                ('telephone_number', models.CharField(blank=True, max_length=30, null=True, verbose_name='Numero de Telefono')),
                ('fax', models.CharField(blank=True, max_length=30, null=True)),
                ('email', models.CharField(max_length=100, null=True, verbose_name='Email')),
                ('emergency_phone', models.CharField(blank=True, max_length=30, null=True, verbose_name='Emergency number')),
                ('provider', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='providersga', to='sga.provider', verbose_name='Provider')),
            ],
        ),
        migrations.AddField(
            model_name='sgacomplement',
            name='other_dangers',
            field=models.TextField(blank=True, null=True, verbose_name='Other Dangers'),
        ),
        migrations.AddField(
            model_name='substancecharacteristics',
            name='concentration',
            field=models.CharField(blank=True, max_length=30, null=True, verbose_name='Molecular Weight'),
        ),
        migrations.AddField(
            model_name='substancecharacteristics',
            name='molecular_weight',
            field=models.CharField(blank=True, max_length=30, null=True, verbose_name='Molecular Weight'),
        ),
        migrations.AddField(
            model_name='substancecharacteristics',
            name='number_ce',
            field=models.CharField(blank=True, max_length=40, null=True, verbose_name='Number CE'),
        ),
        migrations.AddField(
            model_name='substancecharacteristics',
            name='number_index',
            field=models.CharField(blank=True, max_length=40, null=True, verbose_name='Number Index'),
        ),
        migrations.AddField(
            model_name='templatesga',
            name='is_default',
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name='SecurityLeaf',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('general', models.TextField(blank=True, null=True, verbose_name='General recommendations')),
                ('inhalation', models.TextField(blank=True, null=True, verbose_name='If inhaled')),
                ('skin_contact', models.TextField(blank=True, null=True, verbose_name='In case of skin contact')),
                ('eye_contact', models.TextField(blank=True, null=True, verbose_name='In case of contact with eyes')),
                ('ingestion', models.TextField(blank=True, null=True, verbose_name='if it is swallowed')),
                ('symptoms', models.TextField(blank=True, null=True, verbose_name='Most important symptoms and effects, both acute and delayed')),
                ('other_causes', models.TextField(blank=True, null=True, verbose_name='Other Causes')),
                ('medical_indication', models.TextField(blank=True, null=True)),
                ('appropriate', models.TextField(blank=True, null=True, verbose_name='Suitable extinguishing media')),
                ('no_appropriate', models.TextField(blank=True, null=True, verbose_name='Unsuitable extinguishing media')),
                ('specific_dangers', models.TextField(blank=True, null=True, verbose_name='Specific hazards arising from the substance or mixture')),
                ('combustion_products', models.TextField(blank=True, null=True, verbose_name='Hazardous Combustion Products')),
                ('recomendations', models.TextField(blank=True, null=True, verbose_name='Recommendations for firefighters')),
                ('other_info', models.TextField(blank=True, null=True, verbose_name='Other Information')),
                ('personal_caution', models.TextField(blank=True, null=True, verbose_name='Personnel who are not part of the emergency services')),
                ('environmental_caution', models.TextField(blank=True, null=True, verbose_name='Environmental relative precautions')),
                ('methods_material_contention', models.TextField(blank=True, null=True, verbose_name='Methods and material for containment and cleaning up')),
                ('references_sections', models.TextField(blank=True, null=True, verbose_name='Reference to other sections')),
                ('safe_handling', models.TextField(blank=True, null=True, verbose_name='Precautions for safe handling')),
                ('storage_conditions', models.TextField(blank=True, null=True, verbose_name='Conditions for safe storage, including possible incompatibilities')),
                ('specific_end_uses', models.TextField(blank=True, null=True, verbose_name='Specific end uses')),
                ('vla_ed_pp', models.CharField(blank=True, max_length=20, null=True, verbose_name='VLA-ED[ppm]')),
                ('vla_ed_mg', models.CharField(blank=True, max_length=20, null=True, verbose_name='VLA-ED[mgm3]')),
                ('vla_ec_pp', models.CharField(blank=True, max_length=20, null=True, verbose_name='VLA-EC[ppm]')),
                ('vla_ec_mg', models.CharField(blank=True, max_length=20, null=True, verbose_name='VLA-EC[mgm3]')),
                ('vla_vm_mg', models.CharField(blank=True, max_length=20, null=True, verbose_name='VLA-VM[mgm]')),
                ('approppiate_control', models.TextField(blank=True, null=True, verbose_name='Appropriate technical controls')),
                ('eye_face_protection', models.TextField(blank=True, null=True, verbose_name='Eye/face protection')),
                ('skin_protection', models.TextField(blank=True, null=True, verbose_name='Skin protection')),
                ('corporal_protection', models.TextField(blank=True, null=True, verbose_name='Corporal protection')),
                ('breath_protection', models.TextField(blank=True, null=True, verbose_name='Breath protection')),
                ('environmental_exposition', models.TextField(blank=True, null=True, verbose_name='Environmental exposure control')),
                ('aspect', models.TextField(blank=True, null=True, verbose_name='Aspect')),
                ('smell', models.TextField(blank=True, null=True, verbose_name='Smell')),
                ('olfactory_threshold', models.TextField(blank=True, null=True, verbose_name='Olfactory threshold')),
                ('pH', models.TextField(blank=True, null=True, verbose_name='pH')),
                ('melting_point', models.TextField(blank=True, null=True, verbose_name='Melting point/ point of freezing')),
                ('starting_point_boiling', models.TextField(blank=True, null=True, verbose_name='Starting point of boiling and range boiling')),
                ('flashpoint', models.TextField(blank=True, null=True, verbose_name='Flashpoint')),
                ('evaporation_rate', models.TextField(blank=True, null=True, verbose_name='Evaporation rate')),
                ('inflammability_solid_gas', models.TextField(blank=True, null=True, verbose_name='Flammability (solid,gas')),
                ('Inflammability_top_bottom', models.TextField(blank=True, null=True, verbose_name='Inflammability top/bottom or explosive limits')),
                ('vapor_pressure', models.TextField(blank=True, null=True, verbose_name='Vapor pressure')),
                ('vapor_density', models.TextField(blank=True, null=True, verbose_name='Vapor density')),
                ('relative_density', models.TextField(blank=True, null=True, verbose_name='Relative density')),
                ('water_solubility', models.TextField(blank=True, null=True, verbose_name='Water solubility')),
                ('partition_coefficient', models.TextField(blank=True, null=True, verbose_name='Partition coefficient n-octanol/water')),
                ('auto_temperature_inflammation', models.TextField(blank=True, null=True, verbose_name='Auto-temperature inflammation')),
                ('temperature_decomposition', models.TextField(blank=True, null=True, verbose_name='Temperature of decomposition')),
                ('viscosity', models.TextField(blank=True, null=True, verbose_name='Viscosity')),
                ('explosive_properties', models.TextField(blank=True, null=True, verbose_name='Explosive properties')),
                ('properties_oxidising', models.TextField(blank=True, null=True, verbose_name='Properties oxidising')),
                ('reactivity', models.TextField(blank=True, null=True, verbose_name='Reactivity')),
                ('chemical_stability', models.TextField(blank=True, null=True, verbose_name='Chemical stability')),
                ('dangerous_reactions', models.TextField(blank=True, null=True, verbose_name='Possibility of hazardous reactions')),
                ('conditions_avoid', models.TextField(blank=True, null=True, verbose_name='Conditions to avoid')),
                ('incompatible_materials', models.TextField(blank=True, null=True, verbose_name='incompatible materials')),
                ('dangerous_decomposition_products', models.TextField(blank=True, null=True, verbose_name='Hazardous decomposition products')),
                ('acute_toxicity', models.TextField(blank=True, null=True, verbose_name='Acute toxicity')),
                ('skin_irritation', models.TextField(blank=True, null=True, verbose_name='Skin corrosion or irritation')),
                ('eye_irritation', models.TextField(blank=True, null=True, verbose_name='Serious eye damage or irritation')),
                ('respiratory_sensitization', models.TextField(blank=True, null=True, verbose_name='Respiratory or skin sensitization')),
                ('germ_mutagenicity', models.TextField(blank=True, null=True, verbose_name='Germ cell mutagenicity')),
                ('carcinogenicity', models.TextField(blank=True, null=True, verbose_name='Carcinogenicity')),
                ('reproductive_toxicity', models.TextField(blank=True, null=True, verbose_name='Reproductive toxicity')),
                ('unique_exhibition', models.TextField(blank=True, null=True, verbose_name='Specific target organ toxicity - single exposure')),
                ('repeated_exposures', models.TextField(blank=True, null=True, verbose_name='Specific target organ toxicity - repeated exposure')),
                ('aspiration_hazard', models.TextField(blank=True, null=True, verbose_name='Aspiration hazard')),
                ('additional_information', models.TextField(blank=True, null=True, verbose_name='Additional Information')),
                ('toxicity', models.TextField(blank=True, null=True, verbose_name='Toxicity')),
                ('Persistence_degradability', models.TextField(blank=True, null=True, verbose_name='Persistence and degradability')),
                ('bioaccumulative_potential', models.TextField(blank=True, null=True, verbose_name='Bioaccumulative potential')),
                ('soil_mobility', models.TextField(blank=True, null=True, verbose_name='Soil mobility')),
                ('assessment_result', models.TextField(blank=True, null=True, verbose_name='Results of PBT and vPvB assessment')),
                ('other_adverse_effects', models.TextField(blank=True, null=True, verbose_name='Other adverse effects')),
                ('product', models.TextField(blank=True, null=True, verbose_name='Product')),
                ('contaminated_packaging', models.TextField(blank=True, null=True, verbose_name='contaminated packaging')),
                ('onu_number', models.TextField(blank=True, null=True, verbose_name='ONU Number')),
                ('proper_shipping_name', models.TextField(blank=True, null=True, verbose_name='ONU proper shipping name')),
                ('transport_hazard_class', models.TextField(blank=True, null=True, verbose_name='Transport hazard class')),
                ('packaging_group', models.TextField(blank=True, null=True, verbose_name='Packaging group')),
                ('environmental_hazards', models.TextField(blank=True, null=True, verbose_name='Environmental hazards')),
                ('special_precautions', models.TextField(blank=True, null=True, verbose_name='Special precautions for users')),
                ('regulations_legislation', models.TextField(blank=True, null=True, verbose_name='Regulations and legislation on safety, health and the environment specific to thesubstance or mixture')),
                ('chemical_safety_assessment', models.TextField(blank=True, null=True, verbose_name='Chemical Safety Assessment')),
                ('full_text_statements', models.TextField(blank=True, null=True, verbose_name='Full text of the H-Statements referred to in sections 2 and 3.')),
                ('full_text_phrases', models.TextField(blank=True, null=True, verbose_name='The full text of the R-phrases referred to in points 2 and 3')),
                ('other_data_text', models.TextField(blank=True, null=True, verbose_name='Otro datos')),
                ('provider', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sga.provider')),
                ('substance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sga.substance')),
            ],
        ),
        migrations.RunPython(create_default_template),

    ]
