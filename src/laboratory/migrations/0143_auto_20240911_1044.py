    # Generated by Django 4.1.13 on 2024-09-09 11:45

from django.db import migrations


def create_base_unit(apps, schema_editor):
    measurement_unit_list = [
        {"base": "Litros", "unit": "Litros", "value": 1.0},
        {"base": "Litros", "unit": "Mililitros", "value": 1000.0},
        {"base": "Metros", "unit": "Milímetros", "value": 1000.0},
        {"base": "Metros", "unit": "Metros", "value": 1.0},
        {"base": "Metros", "unit": "Centímetros", "value": 100.0},
        {"base": "Kilogramos", "unit": "Kilogramos", "value": 1.0},
        {"base": "Kilogramos", "unit": "Gramos", "value": 1000.0},
        {"base": "Kilogramos", "unit": "Miligramos", "value": 1000000.0},
        {"base": "PSI", "unit": "PSI", "value": 0.0001450377},
        {"base": "Pascales", "unit": "Pascales", "value": 1.0},
        {"base": "Atmósfera", "unit": "Atmósfera", "value": 0.00000986923},
        {"base": "Metro cúbico", "unit": "Metro cúbico", "value": 0.001},
        {"base": "Unidades", "unit": "Unidades", "value": 1.0},
    ]

    BaseUnitValues = apps.get_model('laboratory', 'BaseUnitValues')
    Catalog = apps.get_model('laboratory', 'Catalog')

    delete_base_unit(apps, schema_editor)

    for unit in measurement_unit_list:
        base_unit_instance = Catalog.objects.get(description=unit["base"])
        unit_instance = Catalog.objects.get(description=unit["unit"])
        BaseUnitValues.objects.create(measurement_unit_base=base_unit_instance,
                                measurement_unit=unit_instance,
                                si_value=unit["value"])

def delete_base_unit(apps, schema_editor):
    BaseUnitValues = apps.get_model('laboratory', 'BaseUnitValues')
    BaseUnitValues.objects.all().delete()

class Migration(migrations.Migration):

    dependencies = [
        ('laboratory', '0142_baseunitvalues_measurement_unit_base_and_more'),
    ]

    operations = [
        migrations.RunPython(create_base_unit,
                             reverse_code=delete_base_unit),
    ]
