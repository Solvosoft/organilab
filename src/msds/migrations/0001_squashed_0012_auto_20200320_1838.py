# -*- coding: utf-8 -*-
# Generated by Django 1.11.28 on 2020-03-25 07:46
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
try:
    import fontawesome.fields as fontfields
except:
    fontfields  = None
try:
    import mptt.fields as mpttfields
except:
    mpttfields = None

class Migration(migrations.Migration):

    replaces = [('msds', '0001_initial'), ('msds', '0002_auto_20180630_0219'), ('msds', '0003_auto_20180630_1835'), ('msds', '0004_organilabnode'), ('msds', '0005_auto_20180709_1318'), ('msds', '0006_auto_20180709_1458'), ('msds', '0007_organilabnode_font'), ('msds', '0008_auto_20180709_1839'), ('msds', '0009_auto_20190423_1611'), ('msds', '0010_regulationdocument'), ('msds', '0010_auto_20200118_0034'), ('msds', '0011_merge_20200320_1344'), ('msds', '0012_auto_20200320_1838')]

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MSDSObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(max_length=300, verbose_name='Provider')),
                ('file', models.FilePathField(verbose_name='MSDS File')),
                ('product', models.CharField(max_length=300, verbose_name='Product')),
            ],
            options={
                'ordering': ('pk',),
                'permissions': (('view_msdsobject', 'Can see available MSDSObject'),),
                'verbose_name': 'MSDS Object',
                'verbose_name_plural': 'MSDS Object',
            },
        ),
        migrations.CreateModel(
            name='OrganilabNode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('description', models.TextField(blank=True, null=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mpttfields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='msds.OrganilabNode') if mpttfields else models.ForeignKey(blank=True, null=True,
                    on_delete=django.db.models.deletion.CASCADE, related_name='children',
                    to='msds.OrganilabNode')),
                ('icon', fontfields.IconField(blank=True, max_length=60, null=True) if fontfields else models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='nodes/')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RegulationDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('file', models.FileField(upload_to='regulation/', verbose_name='Regulation File')),
                ('country', models.CharField(max_length=50)),
                ('order', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Regulation document',
                'verbose_name_plural': 'Regulation documents',
                'ordering': ('order',),
            },
        ),
    ]
