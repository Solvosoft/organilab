# Generated by Django 5.1 on 2025-04-04 19:28

import django.db.models.deletion
import laboratory.catalog
import laboratory.models_utils
import location_field.models.plain
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("laboratory", "0145_alter_baseunitvalues_id_and_more"),
        (
            "risk_management",
            "0010_alter_incidentreport_id_alter_priorityconstrain_id_and_more",
        ),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name="buildings",
            name="long",
        ),
        migrations.RemoveField(
            model_name="buildings",
            name="width",
        ),
        migrations.AddField(
            model_name="buildings",
            name="area",
            field=models.FloatField(default=0.0, verbose_name="Area"),
        ),
        migrations.AddField(
            model_name="buildings",
            name="regulatory_plans",
            field=models.FileField(
                blank=True,
                null=True,
                upload_to=laboratory.models_utils.upload_files,
                verbose_name="Regulatory Plans",
            ),
        ),
        migrations.AddField(
            model_name="riskzone",
            name="buildings",
            field=models.ManyToManyField(
                to="risk_management.buildings", verbose_name="Buildings"
            ),
        ),
        migrations.AlterField(
            model_name="buildings",
            name="is_asociaty_buildings",
            field=models.BooleanField(
                default=False, verbose_name="It is Associated with Buildings?"
            ),
        ),
        migrations.AlterField(
            model_name="buildings",
            name="laboratories",
            field=models.ManyToManyField(
                blank=True,
                related_name="buildings",
                to="laboratory.laboratory",
                verbose_name="Laboratories",
            ),
        ),
        migrations.AlterField(
            model_name="buildings",
            name="nearby_buildings",
            field=models.ManyToManyField(
                blank=True,
                related_name="near_buildings_as",
                to="risk_management.buildings",
                verbose_name="Nearby Buildings",
            ),
        ),
        migrations.AlterField(
            model_name="buildings",
            name="regents",
            field=models.ManyToManyField(
                blank=True,
                related_name="regents",
                to="risk_management.regent",
                verbose_name="Regents Associated",
            ),
        ),
        migrations.CreateModel(
            name="Structure",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("last_update", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=150, verbose_name="Name")),
                (
                    "area",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Area"
                    ),
                ),
                (
                    "geolocation",
                    location_field.models.plain.PlainLocationField(
                        default="9.895804362670006,-84.1552734375", max_length=63
                    ),
                ),
                (
                    "buildings",
                    models.ManyToManyField(
                        related_name="structura_buildings",
                        to="risk_management.buildings",
                        verbose_name="Buildings",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "manager",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="structure_manager",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Manager",
                    ),
                ),
                (
                    "measuerement_unit",
                    laboratory.catalog.GTForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="structure_measurement_unit",
                        to="laboratory.catalog",
                        verbose_name="Measurement Unit",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="laboratory.organizationstructure",
                    ),
                ),
                (
                    "type_structure",
                    laboratory.catalog.GTForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="laboratory.catalog",
                        verbose_name="Type",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
