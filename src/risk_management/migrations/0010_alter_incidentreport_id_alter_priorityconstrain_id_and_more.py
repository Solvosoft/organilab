# Generated by Django 5.1 on 2025-03-28 18:18

import django.db.models.deletion
import laboratory.models_utils
import location_field.models.plain
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("laboratory", "0145_alter_baseunitvalues_id_and_more"),
        ("risk_management", "0009_alter_incidentreport_notification_copy"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name="incidentreport",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="priorityconstrain",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="riskzone",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="zonetype",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.CreateModel(
            name="Regent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("last_update", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="laboratory.organizationstructure",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="regent_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Buildings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("last_update", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255, verbose_name="Name")),
                (
                    "is_asociaty_buildings",
                    models.BooleanField(
                        default=False, verbose_name="Is Asociaty Buildings?"
                    ),
                ),
                ("phone", models.CharField(max_length=25, verbose_name="Phone")),
                (
                    "geolocation",
                    location_field.models.plain.PlainLocationField(
                        default="9.895804362670006,-84.1552734375", max_length=63
                    ),
                ),
                (
                    "has_water_resources",
                    models.BooleanField(
                        default=False, verbose_name="Has nearby water resources?"
                    ),
                ),
                (
                    "has_nearby_sites",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=laboratory.models_utils.upload_files,
                        verbose_name="Has Nearby Sites?",
                    ),
                ),
                ("width", models.FloatField(default=0.0, verbose_name="Width")),
                ("long", models.FloatField(default=0.0, verbose_name="Long")),
                (
                    "plans",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=laboratory.models_utils.upload_files,
                        verbose_name="Plans",
                    ),
                ),
                (
                    "security_plan",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=laboratory.models_utils.upload_files,
                        verbose_name="Security Plan",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "laboratories",
                    models.ManyToManyField(
                        related_name="buildings",
                        to="laboratory.laboratory",
                        verbose_name="Laboratories",
                    ),
                ),
                (
                    "manager",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="manager",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Manager",
                    ),
                ),
                (
                    "nearby_buildings",
                    models.ManyToManyField(
                        related_name="near_buildings_as",
                        to="risk_management.buildings",
                        verbose_name="Nearby Buildings",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="laboratory.organizationstructure",
                    ),
                ),
                (
                    "regents",
                    models.ManyToManyField(
                        related_name="regents",
                        to="risk_management.regent",
                        verbose_name="Regent Associated",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
