
upstream wsgi_organilab {
# fail_timeout=0 means we always retry an upstream even if it failed
# to return a good HTTP response (in case the Unicorn master nukes a
# single worker for timing out).

    server unix:/run/supervisor/gunicorn_wsgi.sock fail_timeout=0;
}

upstream asgi_organilab {
    server unix:/run/supervisor/gunicorn_asgi.sock fail_timeout=0;
}

log_format json_logs escape=json
  '{'
    '"app":"nginx",'
    '"time_local":"$time_local",'
    '"remote_addr":"$remote_addr",'
    '"remote_ip":"client_ip",'
    '"request":"$request",'
    '"status": "$status",'
    '"body_bytes_sent":"$body_bytes_sent",'
    '"request_time":"$request_time",'
    '"http_referrer":"$http_referer",'
    '"http_user_agent":"$http_user_agent"'
  '}';


# start maps
# end maps
server {

listen 80;
server_name _;

# host match
# end host match
client_max_body_size 1G;

access_log /var/log/nginx/access.log json_logs ;
error_log /var/log/nginx/error.log;

location /static/ {
	alias /run/static/;
}
location /protected/ {
    internal;
	alias /organilab/media/;
}

location /async/ {
    include /etc/nginx/proxy_params;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_pass http://asgi_organilab;

}

location / {
  include /etc/nginx/proxy_params;
  if (!-f $request_filename) {
	proxy_pass http://wsgi_organilab;
	break;
  }
}
# locations

# end locations
# Error pages
error_page 500 502 503 504 /500.html;
location = /500.html {
   root /run/static/;
 }
}
